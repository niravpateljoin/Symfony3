<?php

namespace DirectoryPlatform\AppBundle\Repository;
use Doctrine\ORM\EntityRepository;
/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{
	public function findAll() 
    {
		$qb = $this->createQueryBuilder('product');

		return $qb->orderBy('product.created', 'DESC')
		          ->getQuery()
		          ->execute();
	}
	public function findByUser(\DirectoryPlatform\AppBundle\Entity\User $user)
    {
        if (!$user) {
            return false;
        }

        $qb = $this->createQueryBuilder('product');

        return $qb->andWhere('product.user = :user')
            ->setParameter('user', $user)
            ->orderBy('product.created', 'DESC')
            ->addOrderBy('product.id', 'DESC')
            ->getQuery()
            ->execute();
    }
	
	public function findForListing($user_id,$count = 10) {
		//$qb = $this->createQueryBuilder('product');
		$qb = $this->createQueryBuilder('product');
		$qb->andWhere('product.enabled = 1')
		   ->orderBy('product.created', 'DESC')
		   ->setParameters([
				'user' => $user_id,
		   ]);

		if ($count !== -1) {
			$qb->setMaxResults($count);
		}

		return $qb->getQuery()
		          ->execute();
	}

	public function findByPublished($request)
    {
        $filterId = $request->get('Id');
        $filterProductName = $request->get('ProductName');
        $filterVendor = $request->get('Vendor');
        $filterCategory = $request->get('Category');
        $filterSku = $request->get('Sku');
        $filterEnabled = $request->get('Enabled');
        
        $qb = $this->createQueryBuilder('product')
                    ->orderBy('product.created', 'DESC');
        
        if($filterId != ''){    
            $qb->andWhere('product.id = :filterId')
                ->setParameter('filterId',$filterId);
        }
        if($filterProductName != ''){    
            $qb->andWhere('product.productName LIKE :filterProductName')
                 ->setParameter('filterProductName','%'.$filterProductName.'%');
        }
        
        if($filterVendor != ''){  
            $qb->andWhere('product.user = :filterVendor')
                 ->setParameter('filterVendor',$filterVendor);
        }
        if($filterCategory != ''){  
            $qb->andWhere('product.category = :filterCategory')
                 ->setParameter('filterCategory',$filterCategory);
        }
        if($filterSku != ''){  
            $qb->andWhere('product.sku = :filterSku')
                 ->setParameter('filterSku',$filterSku);
        }
        if($filterEnabled != ''){  
            if($filterListVerify == 0){
                $qb->andWhere('product.enabled = :filterEnabled OR product.enabled is NULL ');
            }else{
                $qb->andWhere('product.enabled = :filterEnabled');
            }
            $qb->setParameter('filterEnabled', $filterEnabled);
        }
        
        return  $qb->getQuery()
                  ->execute();
    }
}
